import pathlib, re, abc
import meta_file, remove_underwear, patcher

# Non pearl armor patterns
free_items_regex = re.compile(
    r""".*(
                           _0[1|2|3]_.*_\d{4} # this is the default pattern for non cash shop armors
                           ).*""",
    re.VERBOSE,
)

class ArmorCategorizer (patcher.FileCategorizer):
    @abc.abstractmethod
    def is_included(self, block: meta_file.FileBlock):
        pass

    def categorize(self, block: meta_file.FileBlock):
        if not self.is_included(block): return None
        fullPath = str(block.fullPath())
        if remove_underwear.female_regex.match(fullPath):
            if free_items_regex.match(fullPath):
                return "female_free_items"
            else:
                return "female_pearl_items"
        else:
            if free_items_regex.match(fullPath):
                return "male_free_items"
            else:
                return "male_pearl_items"

class ArmorModelCategorizer(ArmorCategorizer):
    def __init__(self):
        self.patterns = [
            "9_upperbody",
            "10_lowerbody",
            "11_hand",
            # "12_foot", keep boots on to avoid heel floating
            # "13_hel", keep helmets on to avoid missing hair/head
            "14_sho",
            "15_underup",
            "19_cloak",
            "event_costume",
        ]

    def is_included(self, block: meta_file.FileBlock):
        return any([p in block.folderName for p in self.patterns])


class ArmorTextureCategorizer(ArmorCategorizer):
    def __init__(self):
        self.underwear_pattern = re.compile(r"_\d{2}_uw_|_99_ub_")
        self.armor_pattern = re.compile(r"p[a-z]+_(\d{2}|ew)_(ub|lb|hand|sho|underup|cloak)_")

    def is_included(self, block: meta_file.FileBlock):
        # Ignore files already patched by remove_underwear.py
        if self.underwear_pattern.search(block.fileName):
            return False
        # Check if it is an armor texture
        return self.armor_pattern.search(block.fileName)

def remove_all_armors(outDir: pathlib.Path, meta: meta_file.MetaFile):
    patcher.hide_player_models("Hide armor models", outDir, meta, ArmorModelCategorizer())
    patcher.patch_player_ao_textures("Patch armor AO textures", outDir, meta, ArmorTextureCategorizer())
    with open(outDir / ".README.md", "w") as f:
        f.write(
            """# What's this?

This folder contains patch files to hide all armors, except boots,
from all playable classes, except Shai, up to release of Scholar.

Generated by Midnight Xyzw (https://github.com/midnightxyzw/bdo-nsfw)

# How to use it?

- Put it under files_to_patch folder.
- Run PartCutGen.exe to refresh your partcuts_desc.xml
- Run Meta Injector.exe to patch your game.
"""
        )
