# Black Desert (script 0.2.5) modified by Garkin
#
#  My modifications are based on BlackFire's modified script:
#  https://www.undertow.club/posts/129096
#
#  Original script:
#  http://aluigi.altervista.org/bms/blackdesert.bms
#
# If you are using Notepad++, change the Language to "Visual Basic" to get a nice color code

quickbmsver "0.7.4"

comtype blackdesert

set BDO_ICE_KEY binary "\x51\xF3\x0F\x11\x04\x24\x6A\x00"
encryption ice BDO_ICE_KEY

get EXT extension

if EXT == "meta"
   putarray 0 0x4000 ""  
   putarray 1 0x2000 ""  
   putarray 2 0x80000 ""

   get VERSION long
   
   get pPAZCount long

   for i = 0 < pPAZCount
       get PAZ_NUM long
       get HASH long
       get PAZ_SIZE long

       string PAZ_NAME p= "PAD%05d.PAZ" PAZ_NUM
       putarray 0 PAZ_NUM PAZ_NAME
   next i

   get FILES_COUNT long
   
   savepos FILE_BLOCKS_START
   xmath FILE_BLOCKS_END "FILE_BLOCKS_START + (FILES_COUNT * 7 * 4)"
   
   goto FILE_BLOCKS_END
   get FOLDER_NAMES_TOTAL_LENGTH long  
   
   savepos FOLDER_NAMES_START  
   log MEMORY_FILE FOLDER_NAMES_START FOLDER_NAMES_TOTAL_LENGTH
   xmath FOLDER_NAMES_END "FOLDER_NAMES_START + FOLDER_NAMES_TOTAL_LENGTH"
   
   goto FOLDER_NAMES_END
   get FILE_NAMES_TOTAL_LENGTH long
   
   savepos FILE_NAMES_START
   log MEMORY_FILE2 FILE_NAMES_START FILE_NAMES_TOTAL_LENGTH
   math FOLDER_NAMES_TOTAL_LENGTH -= 8

   math i = 0
   for TMP = 0 < FOLDER_NAMES_TOTAL_LENGTH
       get INDEX_NUM long MEMORY_FILE
       get SUB_FOLDERS long MEMORY_FILE	
       get FOLDER_NAME string MEMORY_FILE
	   
       if FOLDER_NAME == ""
           break
       endif
       putarray 1 i FOLDER_NAME
       savepos TMP MEMORY_FILE
   next i

   math i = 0

   for TMP = 0 < FILE_NAMES_TOTAL_LENGTH   
       get FILE_NAME string MEMORY_FILE2	

       if FILE_NAME == ""
           break
       endif
       putarray 2 i FILE_NAME
       savepos TMP MEMORY_FILE2
   next i

   goto FILE_BLOCKS_START
   
   for i = 0 < FILES_COUNT 
       get HASH long
       get FOLDER_NUM long 
       get FILE_NUM long   
       get PAZ_NUM long	
       get OFFSET long	
       get ZSIZE long
       get SIZE long		

       getarray PAZ_NAME 0 PAZ_NUM	
       getarray FOLDER_NAME 1 FOLDER_NUM	   
       getarray FILE_NAME 2 FILE_NUM
	   
       string FILE_PATH = FOLDER_NAME
       string FILE_PATH += FILE_NAME

       open FDSE PAZ_NAME 1

       if SIZE > ZSIZE
		   clog FILE_PATH OFFSET ZSIZE SIZE 1
       elseif SIZE == 0
           log FILE_PATH 0 0
		   
       else 
           log MEMORY_FILE3 OFFSET ZSIZE 1
		   
           get FLAGS byte MEMORY_FILE3
		   
			if (FLAGS == 0x6E || FLAGS == 0x6F) && ZSIZE > 9
				get DUMMY long MEMORY_FILE3
				get SIZE2 long MEMORY_FILE3
			endif
		   
		   encryption "" ""
			if SIZE == SIZE2								
				clog FILE_PATH 0 ZSIZE SIZE MEMORY_FILE3
			else                        
				log FILE_PATH 0 SIZE MEMORY_FILE3           
			endif
			encryption ice BDO_ICE_KEY    
       endif
   next i

else if EXT == "PAZ"  #If the file extension is .PAZ
   get DUMMY long
   get TOTAL_FILES long
   get FILE_PATHS_TOTAL_LENGTH long

   savepos FILE_BLOCKS_START
   xmath FILE_BLOCKS_END "FILE_BLOCKS_START + (TOTAL_FILES * 4 * 6)"
   log MEMORY_FILE FILE_BLOCKS_END FILE_PATHS_TOTAL_LENGTH

   math i = 0
   for TMP = 0 < FILE_PATHS_TOTAL_LENGTH
       get FILE_PATH string MEMORY_FILE

       if FILE_PATH == ""
           break
       endif

       putarray 0 i FILE_PATH
       savepos TMP MEMORY_FILE
   next i

   for i = 0 < TOTAL_FILES
       get HASH long
       get FOLDER_NUM long
       get FILE_NUM long
       get OFFSET long
       get ZSIZE long
       get SIZE long

       getarray FOLDER_NAME 0 FOLDER_NUM
       getarray FILE_NAME 0 FILE_NUM
       string FILE_PATH = FOLDER_NAME
       string FILE_PATH += FILE_NAME

       if SIZE > ZSIZE
           clog FILE_PATH OFFSET ZSIZE SIZE
       elseif SIZE == 0
           log FILE_PATH 0 0
       else
           log MEMORY_FILE2 OFFSET ZSIZE
           get FLAGS byte MEMORY_FILE2
		   
			if (FLAGS == 0x6E || FLAGS == 0x6F) && ZSIZE > 9
				get DUMMY long MEMORY_FILE2
				get SIZE2 long MEMORY_FILE2
			endif
		   
           encryption "" ""
           	if SIZE == SIZE2               							
				clog FILE_PATH 0 ZSIZE SIZE MEMORY_FILE2    
			else                     
				log FILE_PATH 0 SIZE MEMORY_FILE2          
			endif
			encryption ice BDO_ICE_KEY   
       endif
   next i

endif